\input texinfo   @c -*-texinfo-*-
@comment $Id@w{$}
@comment %**start of header
@settitle Common Lisp Documentation Weaver
@syncodeindex pg cp
@setfilename cl-docweaver.info
@include ../common-lisp.texi

@copying

Copyright @copyright{} 2021 Mariano Montone

@quotation
Permission is granted to copy, distribute and/or modify this document
under the terms of the GNU Free Documentation License, Version 1.3 or
any later version published by the Free Software Foundation; with no
Invariant Sections, with no Front-Cover Texts, and with no Back-Cover
Texts.  A copy of the license is included in the section entitled
``GNU Free Documentation License''.
@end quotation
@end copying


@dircategory Common Lisp
@direntry
* CL-DocWeaver: (cl-docweaver)Common Lisp documentation weaver.
@end direntry

@titlepage
@title Common Lisp Documentation Weaver

@c Setup cl-docweaver
(@setup :command-prefix #\$ :docsystem :texinfo)

@author Mariano Montone (@email{marianomontone@@gmail.com})
@page
@vskip 0pt plus 1filll
@insertcopying
@end titlepage

@contents

@node Top
@top Top
@cindex docweaver
@cindex cl-docweaver

@emph{CL-DOCWEAVER} is a document weaver for Common Lisp.

Documentation for a Lisp project is written with the user's tool of choice (like Texinfo, Markdown, etc). Then, Common Lisp definitions are expanded into the documentation source using DocWeaver commands.

@menu
* Introduction::
* Installation::
* Usage::
@end menu

@node Introduction
@chapter Introduction
@anchor{introduction}

@emph{CL-DOCWEAVER} is a document weaver for Common Lisp.

Documentation for a Lisp project is written with the user's tool of choice (like Texinfo, Markdown, etc). Then, Common Lisp definitions are expanded into the documentation source using DocWeaver commands.

DocWeaver commands give the user control on how definitions are to be expanded, either via command options or by choosing a different set of commands.

@emph{CL-DOCWEAVER} is easy to extend to support different documentation tools.

Texinfo and Markdown are the ones with best support at this moment.

@node Installation
@chapter Installation
@anchor{installation}


@node Usage
@chapter Usage
@anchor{usage}

Write documentation for your Common Lisp project in your documentation tool of your choice (either Texinfo or Markdown at this moment). Then invoke @emph{cl-docweaver} commands to expand Lisp definitions for either variables, functions, macros, classes, or even whole packages.

Commands have the following syntax: @verb{|(@command-name &rest args)|}.

For example, use @code{(@@clfunction alexandria:flatten)} to expand the definition of @code{ALEXANDRIA:FLATTEN} function.

The expanded function definition looks like this:

($clfunction alexandria:flatten)

Note that commands usually receive options in order to be able to control different aspects of the expanded definition.

By default, docstrings are interpreted to extract possible references to other parts of the code; then those references are formatted as links that can be used to navigate the definitions documentations.

Finally, use ($clref docweaver:weave-file :function) to weave your documentation system source files.

Have a look at @emph{cl-docweaver} documentation in @code{docs} directory for an example of how all this works.
